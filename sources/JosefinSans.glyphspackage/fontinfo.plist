{
.appVersion = "3234";
.formatVersion = 3;
axes = (
{
name = Weight;
tag = wght;
}
);
classes = (
{
automatic = 1;
code = "A Aacute Abreve Abreveacute Abrevedotbelow Abrevegrave Abrevehookabove Abrevetilde Acircumflex Acircumflexacute Acircumflexdotbelow Acircumflexgrave Acircumflexhookabove Acircumflextilde Adblgrave Adieresis Adotbelow Agrave Ahookabove Ainvertedbreve Amacron Aogonek Aring Aringacute Atilde AE AEacute B C Cacute Ccaron Ccedilla Ccircumflex Cdotaccent D DZcaron Eth Dcaron Dcroat Dzcaron E Eacute Ebreve Ecaron Ecircumflex Ecircumflexacute Ecircumflexdotbelow Ecircumflexgrave Ecircumflexhookabove Ecircumflextilde Edblgrave Edieresis Edotaccent Edotbelow Egrave Ehookabove Einvertedbreve Emacron Eogonek Etilde F G Gbreve Gcaron Gcircumflex Gcommaaccent Gdotaccent H Hbar Hcircumflex I IJ Iacute Ibreve Icircumflex Idblgrave Idieresis Idotaccent Idotbelow Igrave Ihookabove Iinvertedbreve Imacron Iogonek Itilde J Jcircumflex K Kcommaaccent L LJ Lacute Lcaron Lcommaaccent Ldot Lj Lslash M N NJ Nacute Ncaron Ncommaaccent Eng Nhookleft Nj Ntilde O Oacute Obreve Ocircumflex Ocircumflexacute Ocircumflexdotbelow Ocircumflexgrave Ocircumflexhookabove Ocircumflextilde Odblgrave Odieresis Odieresismacron Odotaccentmacron Odotbelow Ograve Ohookabove Ohorn Ohornacute Ohorndotbelow Ohorngrave Ohornhookabove Ohorntilde Ohungarumlaut Oinvertedbreve Omacron Oogonek Oslash Oslashacute Otilde Otildemacron OE P Thorn Q R Racute Rcaron Rcommaaccent Rdblgrave Rinvertedbreve S Sacute Scaron Scedilla Scircumflex Scommaaccent Germandbls Schwa T Tbar Tcaron Tcedilla Tcommaaccent U Uacute Ubreve Ucircumflex Udblgrave Udieresis Udotbelow Ugrave Uhookabove Uhorn Uhornacute Uhorndotbelow Uhorngrave Uhornhookabove Uhorntilde Uhungarumlaut Uinvertedbreve Umacron Uogonek Uring Utilde V W Wacute Wcircumflex Wdieresis Wgrave X Y Yacute Ycircumflex Ydieresis Ydotbelow Ygrave Yhookabove Ymacron Ytilde Z Zacute Zcaron Zdotaccent";
name = Uppercase;
}
);
customParameters = (
{
name = fsType;
value = (
);
},
{
name = "Write lastChange";
value = 0;
},
{
name = "Use Typo Metrics";
value = 1;
},
{
name = "Use Line Breaks";
value = 1;
},
{
name = "Axis Mappings";
value = {
wght = {
20 = 100;
50 = 300;
108 = 400;
120 = 600;
150 = 700;
};
};
}
);
date = "2016-08-26 16:01:20 +0000";
familyName = "Josefin Sans";
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;
languagesystem latn dflt;
languagesystem latn CAT;
languagesystem latn ROM;
languagesystem latn MOL;
languagesystem latn KAZ;
languagesystem latn TAT;
languagesystem latn TRK;
languagesystem latn CRT;
languagesystem latn AZE;
";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature sups;
feature frac;
feature ordn;
feature ccmp;
feature locl;
feature case;
feature zero;
";
tag = aalt;
},
{
automatic = 1;
code = "lookup ccmp_latn_1 {
	script latn;
	@CombiningTopAccents = [acutecomb brevecomb breveinvertedcomb caroncomb circumflexcomb dblgravecomb dieresiscomb dotaccentcomb gravecomb hookabovecomb hungarumlautcomb macroncomb ringcomb tildecomb];
	@CombiningNonTopAccents = [brevebelowcomb cedillacomb dieresisbelowcomb dotbelowcomb macronbelowcomb ogonekcomb horncomb strokeshortcomb];
	sub [i]' @CombiningTopAccents by [idotless];
	sub [i]' @CombiningNonTopAccents @CombiningTopAccents by [idotless];
	@Markscomb = [dieresiscomb dotaccentcomb gravecomb acutecomb hungarumlautcomb circumflexcomb caroncomb brevecomb ringcomb tildecomb macroncomb hookabovecomb dblgravecomb breveinvertedcomb horncomb dotbelowcomb dieresisbelowcomb commaaccentcomb cedillacomb ogonekcomb brevebelowcomb macronbelowcomb];
	@MarkscombCase = [dieresiscomb.case dotaccentcomb.case gravecomb.case acutecomb.case hungarumlautcomb.case circumflexcomb.case caroncomb.case brevecomb.case ringcomb.case tildecomb.case macroncomb.case hookabovecomb.case dblgravecomb.case breveinvertedcomb.case horncomb.case dotbelowcomb.case dieresisbelowcomb.case commaaccentcomb.case cedillacomb.case ogonekcomb.case brevebelowcomb.case macronbelowcomb.case];
	sub @Markscomb @Markscomb' by @MarkscombCase;
	sub @Uppercase @Markscomb' by @MarkscombCase;
} ccmp_latn_1;

lookup ccmp_latn_2 {
	script latn;
	sub @Markscomb' @MarkscombCase by @MarkscombCase;
	sub @MarkscombCase @Markscomb' by @MarkscombCase;
} ccmp_latn_2;

lookup ccmp_latn_3 {
	script latn;
	lookupflag 0;
	sub brevecomb acutecomb by brevecomb_acutecomb;
	sub brevecomb gravecomb by brevecomb_gravecomb;
	sub brevecomb hookabovecomb by brevecomb_hookabovecomb;
	sub brevecomb tildecomb by brevecomb_tildecomb;
	sub circumflexcomb acutecomb by circumflexcomb_acutecomb;
	sub circumflexcomb gravecomb by circumflexcomb_gravecomb;
	sub circumflexcomb hookabovecomb by circumflexcomb_hookabovecomb;
	sub circumflexcomb tildecomb by circumflexcomb_tildecomb;
} ccmp_latn_3;
";
tag = ccmp;
},
{
automatic = 1;
code = "script latn;
language CAT;
sub l periodcentered' l by periodcentered.loclCAT;
sub L periodcentered' L by periodcentered.loclCAT.case;
language ROM;
sub Scedilla by Scommaaccent;
sub scedilla by scommaaccent;
sub Tcedilla by Tcommaaccent;
sub tcedilla by tcommaaccent;
language MOL;
sub Scedilla by Scommaaccent;
sub scedilla by scommaaccent;
sub Tcedilla by Tcommaaccent;
sub tcedilla by tcommaaccent;
language KAZ;
sub i by idotaccent;
language TAT;
sub i by idotaccent;
language TRK;
sub i by idotaccent;
language CRT;
sub i by idotaccent;
language AZE;
sub i by idotaccent;
";
tag = locl;
},
{
automatic = 1;
code = "sub one by onesuperior;
sub two by twosuperior;
sub three by threesuperior;
sub four by foursuperior;
";
tag = sups;
},
{
automatic = 1;
code = "sub one slash four by onequarter;
sub one slash two by onehalf;
sub three slash four by threequarters;
";
tag = frac;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;
sub N o period by numero;
";
tag = ordn;
},
{
automatic = 1;
code = "sub periodcentered.loclCAT by periodcentered.loclCAT.case;
sub dieresiscomb by dieresiscomb.case;
sub dotaccentcomb by dotaccentcomb.case;
sub gravecomb by gravecomb.case;
sub acutecomb by acutecomb.case;
sub hungarumlautcomb by hungarumlautcomb.case;
sub circumflexcomb by circumflexcomb.case;
sub caroncomb by caroncomb.case;
sub brevecomb by brevecomb.case;
sub ringcomb by ringcomb.case;
sub tildecomb by tildecomb.case;
sub macroncomb by macroncomb.case;
sub hookabovecomb by hookabovecomb.case;
sub dblgravecomb by dblgravecomb.case;
sub breveinvertedcomb by breveinvertedcomb.case;
sub horncomb by horncomb.case;
sub dotbelowcomb by dotbelowcomb.case;
sub dieresisbelowcomb by dieresisbelowcomb.case;
sub commaaccentcomb by commaaccentcomb.case;
sub cedillacomb by cedillacomb.case;
sub ogonekcomb by ogonekcomb.case;
sub brevebelowcomb by brevebelowcomb.case;
sub macronbelowcomb by macronbelowcomb.case;
";
tag = case;
},
{
automatic = 1;
code = "sub f f ij by f_f_ij;
sub f ij by f_ij;
";
tag = dlig;
},
{
automatic = 1;
code = "sub f f l by f_f_l;
sub f f i by f_f_i;
sub f i by fi;
sub f f by f_f;
sub f l by fl;
";
tag = liga;
},
{
automatic = 1;
code = "sub zero by zero.zero;
";
tag = zero;
}
);
fontMaster = (
{
axesValues = (
20
);
customParameters = (
{
name = "UFO Filename";
value = "JosefinSans-Thin.ufo";
},
{
name = hheaAscender;
value = 750;
},
{
name = hheaDescender;
value = -250;
},
{
name = hheaLineGap;
value = 0;
},
{
name = typoAscender;
value = 750;
},
{
name = typoDescender;
value = -250;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 1242;
},
{
name = winDescent;
value = 324;
},
{
name = weightClass;
value = 100;
}
);
guides = (
{
name = " [#NILMtzbhN6]";
pos = (386,464);
}
);
iconName = Light;
id = "93649EC8-ADF5-4C20-AD08-3ED15854CD33";
metricValues = (
{
pos = 750;
},
{
pos = 702;
},
{
pos = 378;
},
{
over = -7;
},
{
pos = -181;
},
{
over = -7;
},
{
over = 32;
pos = 700;
},
{
over = 5;
pos = 375;
},
{
pos = -250;
}
);
name = Thin;
stemValues = (
123,
27,
219,
222,
123,
180
);
userData = {
com.defcon.sortDescriptor = (
{
ascending = (
A,
Aacute,
Abreve,
Abreveacute,
Abrevedotbelow,
Abrevegrave,
Abrevehookabove,
Abrevetilde,
Acircumflex,
Acircumflexacute,
Acircumflexdotbelow,
Acircumflexgrave,
Acircumflexhookabove,
Acircumflextilde,
Adblgrave,
Adieresis,
Adotbelow,
Agrave,
Ahookabove,
Ainvertedbreve,
Amacron,
Aogonek,
Aring,
Aringacute,
Atilde,
AE,
AEacute,
B,
C,
Cacute,
Ccaron,
Ccedilla,
Ccircumflex,
Cdotaccent,
D,
DZcaron,
Eth,
Dcaron,
Dcroat,
Dzcaron,
E,
Eacute,
Ebreve,
Ecaron,
Ecircumflex,
Ecircumflexacute,
Ecircumflexdotbelow,
Ecircumflexgrave,
Ecircumflexhookabove,
Ecircumflextilde,
Edblgrave,
Edieresis,
Edotaccent,
Edotbelow,
Egrave,
Ehookabove,
Einvertedbreve,
Emacron,
Eogonek,
Etilde,
F,
G,
Gbreve,
Gcaron,
Gcircumflex,
Gcommaaccent,
Gdotaccent,
H,
Hbar,
Hcircumflex,
I,
IJ,
Iacute,
Ibreve,
Icircumflex,
Idblgrave,
Idieresis,
Idotaccent,
Idotbelow,
Igrave,
Ihookabove,
Iinvertedbreve,
Imacron,
Iogonek,
Itilde,
J,
Jcircumflex,
K,
Kcommaaccent,
L,
LJ,
Lacute,
Lcaron,
Lcommaaccent,
Ldot,
Lj,
Lslash,
M,
N,
NJ,
Nacute,
Ncaron,
Ncommaaccent,
Eng,
Nhookleft,
Nj,
Ntilde,
O,
Oacute,
Obreve,
Ocircumflex,
Ocircumflexacute,
Ocircumflexdotbelow,
Ocircumflexgrave,
Ocircumflexhookabove,
Ocircumflextilde,
Odblgrave,
Odieresis,
Odieresismacron,
Odotaccentmacron,
Odotbelow,
Ograve,
Ohookabove,
Ohorn,
Ohornacute,
Ohorndotbelow,
Ohorngrave,
Ohornhookabove,
Ohorntilde,
Ohungarumlaut,
Oinvertedbreve,
Omacron,
Oogonek,
Oslash,
Oslashacute,
Otilde,
Otildemacron,
OE,
P,
Thorn,
Q,
R,
Racute,
Rcaron,
Rcommaaccent,
Rdblgrave,
Rinvertedbreve,
S,
Sacute,
Scaron,
Scedilla,
Scircumflex,
Scommaaccent,
Germandbls,
Schwa,
T,
Tbar,
Tcaron,
Tcedilla,
Tcommaaccent,
U,
Uacute,
Ubreve,
Ucaron,
Ucircumflex,
Udblgrave,
Udieresis,
Udotbelow,
Ugrave,
Uhookabove,
Uhorn,
Uhornacute,
Uhorndotbelow,
Uhorngrave,
Uhornhookabove,
Uhorntilde,
Uhungarumlaut,
Uinvertedbreve,
Umacron,
Uogonek,
Uring,
Utilde,
V,
W,
Wacute,
Wcircumflex,
Wdieresis,
Wgrave,
X,
Y,
Yacute,
Ycircumflex,
Ydieresis,
Ydotbelow,
Ygrave,
Yhookabove,
Ymacron,
Ytilde,
Z,
Zacute,
Zcaron,
Zdotaccent,
a,
aacute,
abreve,
abreveacute,
abrevedotbelow,
abrevegrave,
abrevehookabove,
abrevetilde,
acircumflex,
acircumflexacute,
acircumflexdotbelow,
acircumflexgrave,
acircumflexhookabove,
acircumflextilde,
adblgrave,
adieresis,
adotbelow,
agrave,
ahookabove,
ainvertedbreve,
amacron,
aogonek,
aring,
aringacute,
atilde,
ae,
aeacute,
b,
c,
cacute,
ccaron,
ccedilla,
ccircumflex,
cdotaccent,
d,
eth,
dcaron,
dcroat,
dz,
dzcaron,
e,
eacute,
ebreve,
ecaron,
ecircumflex,
ecircumflexacute,
ecircumflexdotbelow,
ecircumflexgrave,
ecircumflexhookabove,
ecircumflextilde,
edblgrave,
edieresis,
edotaccent,
edotbelow,
egrave,
ehookabove,
einvertedbreve,
emacron,
eogonek,
etilde,
schwa,
f,
g,
gbreve,
gcaron,
gcircumflex,
gcommaaccent,
gdotaccent,
h,
hbar,
hcircumflex,
i,
idotless,
iacute,
ibreve,
icircumflex,
idblgrave,
idieresis,
idotaccent,
idotbelow,
igrave,
ihookabove,
iinvertedbreve,
ij,
imacron,
iogonek,
itilde,
j,
jdotless,
jcircumflex,
k,
kcommaaccent,
kgreenlandic,
l,
lacute,
lcaron,
lcommaaccent,
ldot,
lj,
lslash,
m,
n,
nacute,
napostrophe,
ncaron,
ncommaaccent,
eng,
nhookleft,
nj,
ntilde,
o,
oacute,
obreve,
ocircumflex,
ocircumflexacute,
ocircumflexdotbelow,
ocircumflexgrave,
ocircumflexhookabove,
ocircumflextilde,
odblgrave,
odieresis,
odieresismacron,
odotaccentmacron,
odotbelow,
ograve,
ohookabove,
ohorn,
ohornacute,
ohorndotbelow,
ohorngrave,
ohornhookabove,
ohorntilde,
ohungarumlaut,
oinvertedbreve,
omacron,
oogonek,
oslash,
oslashacute,
otilde,
otildemacron,
oe,
p,
thorn,
q,
r,
racute,
rcaron,
rcommaaccent,
rdblgrave,
rinvertedbreve,
s,
sacute,
scaron,
scedilla,
scircumflex,
scommaaccent,
germandbls,
t,
tbar,
tcaron,
tcedilla,
tcommaaccent,
u,
uacute,
ubreve,
ucircumflex,
udblgrave,
udieresis,
udotbelow,
ugrave,
uhookabove,
uhorn,
uhornacute,
uhorndotbelow,
uhorngrave,
uhornhookabove,
uhorntilde,
uhungarumlaut,
uinvertedbreve,
umacron,
uogonek,
uring,
utilde,
v,
w,
wacute,
wcircumflex,
wdieresis,
wgrave,
x,
y,
yacute,
ycircumflex,
ydieresis,
ydotbelow,
ygrave,
yhookabove,
ymacron,
ytilde,
z,
zacute,
zcaron,
zdotaccent,
f_f,
f_f_i,
f_f_ij,
f_f_l,
f_ij,
fi,
fl,
ordfeminine,
ordmasculine,
Delta,
mu,
pi,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
zero.zero,
onesuperior,
twosuperior,
threesuperior,
foursuperior,
fraction,
onehalf,
onequarter,
threequarters,
asterisk,
backslash,
periodcentered,
bullet,
colon,
comma,
ellipsis,
exclam,
exclamdown,
numbersign,
period,
question,
questiondown,
quotedbl,
quotesingle,
semicolon,
slash,
underscore,
periodcentered.loclCAT.case,
periodcentered.loclCAT,
braceleft,
braceright,
bracketleft,
bracketright,
parenleft,
parenright,
emdash,
endash,
hyphen,
softhyphen,
guillemetleft,
guillemetright,
guilsinglleft,
guilsinglright,
quotedblbase,
quotedblleft,
quotedblright,
quoteleft,
quoteright,
quotesinglbase,
space,
nbspace,
CR,
.notdef,
cedi,
cent,
colonsign,
currency,
dollar,
dong,
euro,
florin,
franc,
guarani,
kip,
lira,
liraTurkish,
manat,
naira,
peseta,
peso,
ruble,
rupeeIndian,
sterling,
won,
yen,
bulletoperator,
divisionslash,
plus,
minus,
multiply,
divide,
equal,
notequal,
greater,
less,
greaterequal,
lessequal,
plusminus,
approxequal,
asciitilde,
logicalnot,
infinity,
integral,
Ohm,
increment,
product,
summation,
radical,
micro,
percent,
perthousand,
lozenge,
at,
ampersand,
paragraph,
section,
copyright,
registered,
trademark,
degree,
bar,
brokenbar,
dagger,
daggerdbl,
numero,
asciicircum,
dieresiscomb,
dotaccentcomb,
gravecomb,
acutecomb,
hungarumlautcomb,
circumflexcomb,
caroncomb,
brevecomb,
ringcomb,
tildecomb,
macroncomb,
hookabovecomb,
dblgravecomb,
breveinvertedcomb,
commaturnedabovecomb,
horncomb,
dotbelowcomb,
dieresisbelowcomb,
commaaccentcomb,
cedillacomb,
ogonekcomb,
brevebelowcomb,
macronbelowcomb,
strokeshortcomb,
dieresiscomb.case,
dotaccentcomb.case,
gravecomb.case,
acutecomb.case,
hungarumlautcomb.case,
circumflexcomb.case,
caroncomb.case,
brevecomb.case,
ringcomb.case,
tildecomb.case,
macroncomb.case,
hookabovecomb.case,
dblgravecomb.case,
breveinvertedcomb.case,
horncomb.case,
dotbelowcomb.case,
dieresisbelowcomb.case,
commaaccentcomb.case,
cedillacomb.case,
ogonekcomb.case,
brevebelowcomb.case,
macronbelowcomb.case,
apostrophemod,
firsttonechinese,
acute,
breve,
caron,
cedilla,
circumflex,
dieresis,
dotaccent,
grave,
hungarumlaut,
macron,
ogonek,
ring,
tilde,
brevecomb_acutecomb,
brevecomb_gravecomb,
brevecomb_hookabovecomb,
brevecomb_tildecomb,
circumflexcomb_acutecomb,
circumflexcomb_gravecomb,
circumflexcomb_hookabovecomb,
circumflexcomb_tildecomb,
IJacute,
ijacute,
macronbelowcomba,
NULL
);
type = glyphList;
}
);
com.typemytype.robofont.segmentType = curve;
};
},
{
axesValues = (
50
);
customParameters = (
{
name = "UFO Filename";
value = "JosefinSans-Light.ufo";
},
{
name = hheaAscender;
value = 750;
},
{
name = hheaDescender;
value = -250;
},
{
name = hheaLineGap;
value = 0;
},
{
name = typoAscender;
value = 750;
},
{
name = typoDescender;
value = -250;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 1242;
},
{
name = winDescent;
value = 324;
},
{
name = weightClass;
value = 300;
}
);
iconName = SemiLight;
id = "4C85334C-E1D4-4EB0-A0B2-9D58DDEA71D9";
metricValues = (
{
pos = 750;
},
{
pos = 710;
},
{
pos = 391;
},
{
over = -8;
},
{
pos = -188;
},
{
over = -8;
},
{
over = 32;
pos = 700;
},
{
over = 6;
pos = 375;
},
{
pos = -250;
}
);
name = Light;
stemValues = (
110,
39,
227,
230,
110,
195
);
userData = {
com.defcon.sortDescriptor = (
{
ascending = (
A,
Aacute,
Abreve,
Abreveacute,
Abrevedotbelow,
Abrevegrave,
Abrevehookabove,
Abrevetilde,
Acircumflex,
Acircumflexacute,
Acircumflexdotbelow,
Acircumflexgrave,
Acircumflexhookabove,
Acircumflextilde,
Adblgrave,
Adieresis,
Adotbelow,
Agrave,
Ahookabove,
Ainvertedbreve,
Amacron,
Aogonek,
Aring,
Aringacute,
Atilde,
AE,
AEacute,
B,
C,
Cacute,
Ccaron,
Ccedilla,
Ccircumflex,
Cdotaccent,
D,
DZcaron,
Eth,
Dcaron,
Dcroat,
Dzcaron,
E,
Eacute,
Ebreve,
Ecaron,
Ecircumflex,
Ecircumflexacute,
Ecircumflexdotbelow,
Ecircumflexgrave,
Ecircumflexhookabove,
Ecircumflextilde,
Edblgrave,
Edieresis,
Edotaccent,
Edotbelow,
Egrave,
Ehookabove,
Einvertedbreve,
Emacron,
Eogonek,
Etilde,
F,
G,
Gbreve,
Gcaron,
Gcircumflex,
Gcommaaccent,
Gdotaccent,
H,
Hbar,
Hcircumflex,
I,
IJ,
Iacute,
Ibreve,
Icircumflex,
Idblgrave,
Idieresis,
Idotaccent,
Idotbelow,
Igrave,
Ihookabove,
Iinvertedbreve,
Imacron,
Iogonek,
Itilde,
J,
Jcircumflex,
K,
Kcommaaccent,
L,
LJ,
Lacute,
Lcaron,
Lcommaaccent,
Ldot,
Lj,
Lslash,
M,
N,
NJ,
Nacute,
Ncaron,
Ncommaaccent,
Eng,
Nhookleft,
Nj,
Ntilde,
O,
Oacute,
Obreve,
Ocircumflex,
Ocircumflexacute,
Ocircumflexdotbelow,
Ocircumflexgrave,
Ocircumflexhookabove,
Ocircumflextilde,
Odblgrave,
Odieresis,
Odieresismacron,
Odotaccentmacron,
Odotbelow,
Ograve,
Ohookabove,
Ohorn,
Ohornacute,
Ohorndotbelow,
Ohorngrave,
Ohornhookabove,
Ohorntilde,
Ohungarumlaut,
Oinvertedbreve,
Omacron,
Oogonek,
Oslash,
Oslashacute,
Otilde,
Otildemacron,
OE,
P,
Thorn,
Q,
R,
Racute,
Rcaron,
Rcommaaccent,
Rdblgrave,
Rinvertedbreve,
S,
Sacute,
Scaron,
Scedilla,
Scircumflex,
Scommaaccent,
Germandbls,
Schwa,
T,
Tbar,
Tcaron,
Tcedilla,
Tcommaaccent,
U,
Uacute,
Ubreve,
Ucaron,
Ucircumflex,
Udblgrave,
Udieresis,
Udotbelow,
Ugrave,
Uhookabove,
Uhorn,
Uhornacute,
Uhorndotbelow,
Uhorngrave,
Uhornhookabove,
Uhorntilde,
Uhungarumlaut,
Uinvertedbreve,
Umacron,
Uogonek,
Uring,
Utilde,
V,
W,
Wacute,
Wcircumflex,
Wdieresis,
Wgrave,
X,
Y,
Yacute,
Ycircumflex,
Ydieresis,
Ydotbelow,
Ygrave,
Yhookabove,
Ymacron,
Ytilde,
Z,
Zacute,
Zcaron,
Zdotaccent,
a,
aacute,
abreve,
abreveacute,
abrevedotbelow,
abrevegrave,
abrevehookabove,
abrevetilde,
acircumflex,
acircumflexacute,
acircumflexdotbelow,
acircumflexgrave,
acircumflexhookabove,
acircumflextilde,
adblgrave,
adieresis,
adotbelow,
agrave,
ahookabove,
ainvertedbreve,
amacron,
aogonek,
aring,
aringacute,
atilde,
ae,
aeacute,
b,
c,
cacute,
ccaron,
ccedilla,
ccircumflex,
cdotaccent,
d,
eth,
dcaron,
dcroat,
dz,
dzcaron,
e,
eacute,
ebreve,
ecaron,
ecircumflex,
ecircumflexacute,
ecircumflexdotbelow,
ecircumflexgrave,
ecircumflexhookabove,
ecircumflextilde,
edblgrave,
edieresis,
edotaccent,
edotbelow,
egrave,
ehookabove,
einvertedbreve,
emacron,
eogonek,
etilde,
schwa,
f,
g,
gbreve,
gcaron,
gcircumflex,
gcommaaccent,
gdotaccent,
h,
hbar,
hcircumflex,
i,
idotless,
iacute,
ibreve,
icircumflex,
idblgrave,
idieresis,
idotaccent,
idotbelow,
igrave,
ihookabove,
iinvertedbreve,
ij,
imacron,
iogonek,
itilde,
j,
jdotless,
jcircumflex,
k,
kcommaaccent,
kgreenlandic,
l,
lacute,
lcaron,
lcommaaccent,
ldot,
lj,
lslash,
m,
n,
nacute,
napostrophe,
ncaron,
ncommaaccent,
eng,
nhookleft,
nj,
ntilde,
o,
oacute,
obreve,
ocircumflex,
ocircumflexacute,
ocircumflexdotbelow,
ocircumflexgrave,
ocircumflexhookabove,
ocircumflextilde,
odblgrave,
odieresis,
odieresismacron,
odotaccentmacron,
odotbelow,
ograve,
ohookabove,
ohorn,
ohornacute,
ohorndotbelow,
ohorngrave,
ohornhookabove,
ohorntilde,
ohungarumlaut,
oinvertedbreve,
omacron,
oogonek,
oslash,
oslashacute,
otilde,
otildemacron,
oe,
p,
thorn,
q,
r,
racute,
rcaron,
rcommaaccent,
rdblgrave,
rinvertedbreve,
s,
sacute,
scaron,
scedilla,
scircumflex,
scommaaccent,
germandbls,
t,
tbar,
tcaron,
tcedilla,
tcommaaccent,
u,
uacute,
ubreve,
ucircumflex,
udblgrave,
udieresis,
udotbelow,
ugrave,
uhookabove,
uhorn,
uhornacute,
uhorndotbelow,
uhorngrave,
uhornhookabove,
uhorntilde,
uhungarumlaut,
uinvertedbreve,
umacron,
uogonek,
uring,
utilde,
v,
w,
wacute,
wcircumflex,
wdieresis,
wgrave,
x,
y,
yacute,
ycircumflex,
ydieresis,
ydotbelow,
ygrave,
yhookabove,
ymacron,
ytilde,
z,
zacute,
zcaron,
zdotaccent,
f_f,
f_f_i,
f_f_ij,
f_f_l,
f_ij,
fi,
fl,
ordfeminine,
ordmasculine,
Delta,
mu,
pi,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
zero.zero,
onesuperior,
twosuperior,
threesuperior,
foursuperior,
fraction,
onehalf,
onequarter,
threequarters,
asterisk,
backslash,
periodcentered,
bullet,
colon,
comma,
ellipsis,
exclam,
exclamdown,
numbersign,
period,
question,
questiondown,
quotedbl,
quotesingle,
semicolon,
slash,
underscore,
periodcentered.loclCAT.case,
periodcentered.loclCAT,
braceleft,
braceright,
bracketleft,
bracketright,
parenleft,
parenright,
emdash,
endash,
hyphen,
softhyphen,
guillemetleft,
guillemetright,
guilsinglleft,
guilsinglright,
quotedblbase,
quotedblleft,
quotedblright,
quoteleft,
quoteright,
quotesinglbase,
space,
nbspace,
CR,
.notdef,
cedi,
cent,
colonsign,
currency,
dollar,
dong,
euro,
florin,
franc,
guarani,
kip,
lira,
liraTurkish,
manat,
naira,
peseta,
peso,
ruble,
rupeeIndian,
sterling,
won,
yen,
bulletoperator,
divisionslash,
plus,
minus,
multiply,
divide,
equal,
notequal,
greater,
less,
greaterequal,
lessequal,
plusminus,
approxequal,
asciitilde,
logicalnot,
infinity,
integral,
Ohm,
increment,
product,
summation,
radical,
micro,
percent,
perthousand,
lozenge,
at,
ampersand,
paragraph,
section,
copyright,
registered,
trademark,
degree,
bar,
brokenbar,
dagger,
daggerdbl,
numero,
asciicircum,
dieresiscomb,
dotaccentcomb,
gravecomb,
acutecomb,
hungarumlautcomb,
circumflexcomb,
caroncomb,
brevecomb,
ringcomb,
tildecomb,
macroncomb,
hookabovecomb,
dblgravecomb,
breveinvertedcomb,
commaturnedabovecomb,
horncomb,
dotbelowcomb,
dieresisbelowcomb,
commaaccentcomb,
cedillacomb,
ogonekcomb,
brevebelowcomb,
macronbelowcomb,
strokeshortcomb,
dieresiscomb.case,
dotaccentcomb.case,
gravecomb.case,
acutecomb.case,
hungarumlautcomb.case,
circumflexcomb.case,
caroncomb.case,
brevecomb.case,
ringcomb.case,
tildecomb.case,
macroncomb.case,
hookabovecomb.case,
dblgravecomb.case,
breveinvertedcomb.case,
horncomb.case,
dotbelowcomb.case,
dieresisbelowcomb.case,
commaaccentcomb.case,
cedillacomb.case,
ogonekcomb.case,
brevebelowcomb.case,
macronbelowcomb.case,
apostrophemod,
firsttonechinese,
acute,
breve,
caron,
cedilla,
circumflex,
dieresis,
dotaccent,
grave,
hungarumlaut,
macron,
ogonek,
ring,
tilde,
brevecomb_acutecomb,
brevecomb_gravecomb,
brevecomb_hookabovecomb,
brevecomb_tildecomb,
circumflexcomb_acutecomb,
circumflexcomb_gravecomb,
circumflexcomb_hookabovecomb,
circumflexcomb_tildecomb,
IJacute,
ijacute,
macronbelowcomba,
NULL
);
type = glyphList;
}
);
com.typemytype.robofont.segmentType = curve;
};
},
{
axesValues = (
108
);
customParameters = (
{
name = "UFO Filename";
value = "JosefinSans-Regular.ufo";
},
{
name = hheaAscender;
value = 750;
},
{
name = hheaDescender;
value = -250;
},
{
name = hheaLineGap;
value = 0;
},
{
name = typoAscender;
value = 750;
},
{
name = typoDescender;
value = -250;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 1242;
},
{
name = winDescent;
value = 324;
},
{
name = weightClass;
value = 400;
}
);
id = "3DCE0E54-12D6-4F05-956C-7616B59038AD";
metricValues = (
{
pos = 750;
},
{
pos = 725;
},
{
pos = 418;
},
{
over = -9;
},
{
pos = -201;
},
{
over = -9;
},
{
over = 32;
pos = 700;
},
{
over = 8;
pos = 375;
},
{
pos = -250;
}
);
name = Regular;
stemValues = (
84,
63,
242,
245,
84,
225
);
},
{
axesValues = (
150
);
customParameters = (
{
name = "UFO Filename";
value = "JosefinSans-Bold.ufo";
},
{
name = hheaAscender;
value = 750;
},
{
name = hheaDescender;
value = -250;
},
{
name = hheaLineGap;
value = 0;
},
{
name = typoAscender;
value = 750;
},
{
name = typoDescender;
value = -250;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 1242;
},
{
name = winDescent;
value = 324;
},
{
name = weightClass;
value = 700;
}
);
iconName = Bold;
id = UUID1;
metricValues = (
{
pos = 750;
},
{
pos = 736;
},
{
pos = 437;
},
{
over = -9;
},
{
pos = -210;
},
{
over = -9;
},
{
over = 32;
pos = 700;
},
{
over = 9;
pos = 375;
},
{
pos = -250;
}
);
name = Bold;
stemValues = (
65,
81,
253,
256,
65,
246
);
userData = {
com.typemytype.robofont.segmentType = curve;
};
}
);
instances = (
{
axesValues = (
20
);
customParameters = (
{
name = "UFO Filename";
value = "instance_ufos/JosefinSans-Thin.ufo";
}
);
instanceInterpolations = {
"93649EC8-ADF5-4C20-AD08-3ED15854CD33" = 1;
};
name = Thin;
weightClass = 100;
},
{
axesValues = (
50
);
customParameters = (
{
name = "UFO Filename";
value = "instance_ufos/JosefinSans-Light.ufo";
}
);
instanceInterpolations = {
"4C85334C-E1D4-4EB0-A0B2-9D58DDEA71D9" = 1;
};
name = Light;
weightClass = 300;
},
{
axesValues = (
108
);
customParameters = (
{
name = "UFO Filename";
value = "instance_ufos/JosefinSans-Regular.ufo";
}
);
instanceInterpolations = {
"3DCE0E54-12D6-4F05-956C-7616B59038AD" = 1;
};
name = Regular;
},
{
axesValues = (
120
);
customParameters = (
{
name = "UFO Filename";
value = "instance_ufos/JosefinSans-SemiBold.ufo";
}
);
instanceInterpolations = {
"3DCE0E54-12D6-4F05-956C-7616B59038AD" = 0.71429;
UUID1 = 0.28571;
};
name = SemiBold;
weightClass = 600;
},
{
axesValues = (
150
);
customParameters = (
{
name = "UFO Filename";
value = "instance_ufos/JosefinSans-Bold.ufo";
}
);
instanceInterpolations = {
UUID1 = 1;
};
name = Bold;
weightClass = 700;
},
{
customParameters = (
{
name = "Variable Font Origin";
value = "3DCE0E54-12D6-4F05-956C-7616B59038AD";
}
);
name = Regular;
type = variable;
}
);
kerningLTR = {
"93649EC8-ADF5-4C20-AD08-3ED15854CD33" = {
"@MMK_L_A" = {
"@MMK_R_O" = -25;
"@MMK_R_T" = -72;
"@MMK_R_U" = -11;
"@MMK_R_V" = -8;
"@MMK_R_W" = -62;
"@MMK_R_Y" = -87;
"@MMK_R_v" = -30;
U = -10;
Y = -76;
};
"@MMK_L_B" = {
"@MMK_R_W" = -14;
};
"@MMK_L_F" = {
"@MMK_R_A" = -92;
"@MMK_R_O" = -38;
"@MMK_R_n" = -55;
"@MMK_R_o" = -76;
"@MMK_R_period" = -115;
"@MMK_R_v" = -43;
AE = -81;
J = -92;
i = -46;
j = -46;
};
"@MMK_L_K" = {
"@MMK_R_O" = -41;
};
"@MMK_L_L" = {
"@MMK_R_O" = -69;
"@MMK_R_V" = -122;
"@MMK_R_W" = -110;
"@MMK_R_Y" = -110;
};
"@MMK_L_O" = {
"@MMK_R_A" = -25;
"@MMK_R_T" = -46;
"@MMK_R_V" = -37;
"@MMK_R_W" = -42;
"@MMK_R_X" = -33;
"@MMK_R_Y" = -36;
A = -21;
X = -35;
};
"@MMK_L_P" = {
"@MMK_R_A" = -70;
four = -48;
};
"@MMK_L_R" = {
"@MMK_R_O" = -41;
"@MMK_R_T" = -92;
"@MMK_R_W" = -84;
"@MMK_R_Y" = -64;
"@MMK_R_v" = -48;
};
"@MMK_L_S" = {
"@MMK_R_T" = -13;
};
"@MMK_L_T" = {
"@MMK_R_A" = -72;
"@MMK_R_O" = -46;
"@MMK_R_n" = -60;
"@MMK_R_o" = -118;
"@MMK_R_period" = -92;
"@MMK_R_s" = -98;
"@MMK_R_v" = -100;
i = -55;
z = -71;
};
"@MMK_L_U" = {
"@MMK_R_A" = -11;
};
"@MMK_L_V" = {
"@MMK_R_O" = -41;
"@MMK_R_n" = -54;
"@MMK_R_o" = -94;
"@MMK_R_period" = -119;
"@MMK_R_s" = -62;
"@MMK_R_v" = -62;
AE = -6;
i = -36;
t = -23;
};
"@MMK_L_W" = {
"@MMK_R_A" = -76;
"@MMK_R_O" = -41;
"@MMK_R_n" = -50;
"@MMK_R_o" = -100;
"@MMK_R_period" = -100;
"@MMK_R_v" = -51;
i = -36;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -87;
"@MMK_R_O" = -46;
"@MMK_R_n" = -80;
"@MMK_R_o" = -101;
"@MMK_R_period" = -110;
AE = -72;
p = -100;
t = -55;
};
"@MMK_L_f" = {
"@MMK_R_o" = -11;
};
"@MMK_L_k" = {
schwa = -5;
};
"@MMK_L_n" = {
"@MMK_R_v" = -6;
};
"@MMK_L_o" = {
"@MMK_R_v" = -10;
"@MMK_R_w" = -10;
};
"@MMK_L_r" = {
"@MMK_R_o" = -15;
};
A = {
C = -21;
G = -21;
O = -21;
T = -51;
V = -77;
v = -22;
w = -20;
};
F = {
"@MMK_R_A" = -61;
J = -21;
a = -76;
f = -36;
};
G = {
"@MMK_R_W" = -16;
"@MMK_R_Y" = -28;
Y = -30;
};
K = {
"@MMK_R_v" = -6;
};
L = {
"@MMK_R_W" = -10;
T = -98;
Y = -10;
};
O = {
T = -39;
Y = -32;
};
P = {
"@MMK_R_A" = -61;
"@MMK_R_period" = -81;
Y = -20;
};
R = {
Y = -6;
};
T = {
"@MMK_R_O" = -39;
"@MMK_R_period" = -117;
A = -51;
a = -118;
v = -8;
w = -90;
};
V = {
A = -76;
a = -94;
u = -72;
};
X = {
"@MMK_R_O" = -35;
};
Y = {
"@MMK_R_A" = -77;
"@MMK_R_O" = -32;
O = -32;
S = -11;
a = -100;
s = -81;
u = -75;
v = -60;
};
b = {
v = -11;
w = -11;
x = -11;
};
e = {
v = -6;
w = -6;
x = -6;
};
f = {
a = -21;
};
k = {
"@MMK_R_o" = -24;
};
m = {
"@MMK_R_v" = -5;
"@MMK_R_w" = -5;
};
nine = {
four = -41;
};
period = {
"@MMK_R_T" = -117;
"@MMK_R_V" = -119;
"@MMK_R_W" = -100;
"@MMK_R_Y" = -110;
four = -48;
};
r = {
period = -49;
};
seven = {
copyright = -31;
currency = -49;
dong = -57;
four = -90;
nine = -19;
six = -19;
};
two = {
four = -19;
};
v = {
a = -11;
};
w = {
a = -10;
};
};
"4C85334C-E1D4-4EB0-A0B2-9D58DDEA71D9" = {
"@MMK_L_A" = {
"@MMK_R_O" = -31;
"@MMK_R_T" = -69;
"@MMK_R_U" = -13;
"@MMK_R_V" = -29;
"@MMK_R_W" = -73;
"@MMK_R_Y" = -90;
"@MMK_R_n" = 0;
"@MMK_R_o" = -5;
"@MMK_R_s" = 0;
"@MMK_R_v" = -30;
"@MMK_R_w" = 0;
Hbar = -16;
U = -7;
Y = -82;
b = 0;
f = 0;
w = 0;
z = 0;
};
"@MMK_L_B" = {
"@MMK_R_A" = 0;
"@MMK_R_V" = -11;
"@MMK_R_W" = -16;
"@MMK_R_X" = -5;
"@MMK_R_Y" = -11;
"@MMK_R_o" = 0;
"@MMK_R_w" = 0;
AE = -8;
Z = -5;
b = 0;
f = 0;
};
"@MMK_L_F" = {
"@MMK_R_A" = -71;
"@MMK_R_O" = -29;
"@MMK_R_n" = -42;
"@MMK_R_o" = -68;
"@MMK_R_period" = -88;
"@MMK_R_s" = 0;
"@MMK_R_v" = -38;
AE = -88;
J = -71;
b = 0;
f = 0;
i = -35;
j = -35;
u = -7;
};
"@MMK_L_K" = {
"@MMK_R_O" = -32;
"@MMK_R_o" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
b = 0;
};
"@MMK_L_L" = {
"@MMK_R_O" = -53;
"@MMK_R_T" = 0;
"@MMK_R_V" = -129;
"@MMK_R_W" = -85;
"@MMK_R_Y" = -85;
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
b = 0;
};
"@MMK_L_O" = {
"@MMK_R_A" = -31;
"@MMK_R_T" = -35;
"@MMK_R_V" = -40;
"@MMK_R_W" = -46;
"@MMK_R_X" = -25;
"@MMK_R_Y" = -28;
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
"@MMK_R_x" = -6;
A = -28;
AE = -21;
X = -35;
Y = -15;
Z = -8;
b = 0;
};
"@MMK_L_P" = {
"@MMK_R_A" = -57;
"@MMK_R_Y" = 0;
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
AE = -26;
Z = -11;
b = 0;
four = -37;
};
"@MMK_L_R" = {
"@MMK_R_O" = -32;
"@MMK_R_T" = -71;
"@MMK_R_V" = -11;
"@MMK_R_W" = -74;
"@MMK_R_Y" = -49;
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = -41;
"@MMK_R_w" = 0;
b = 0;
f = 0;
oslash = 0;
};
"@MMK_L_S" = {
"@MMK_R_T" = -10;
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
b = 0;
f = 0;
};
"@MMK_L_T" = {
"@MMK_R_A" = -69;
"@MMK_R_O" = -35;
"@MMK_R_n" = -60;
"@MMK_R_o" = -114;
"@MMK_R_period" = -71;
"@MMK_R_s" = -94;
"@MMK_R_v" = -100;
"@MMK_R_w" = 0;
AE = -16;
b = 0;
i = -42;
z = -73;
};
"@MMK_L_U" = {
"@MMK_R_A" = -13;
};
"@MMK_L_V" = {
"@MMK_R_A" = -26;
"@MMK_R_O" = -43;
"@MMK_R_n" = -62;
"@MMK_R_o" = -101;
"@MMK_R_period" = -115;
"@MMK_R_s" = -67;
"@MMK_R_v" = -69;
AE = -34;
J = -5;
b = 0;
i = -28;
t = -18;
};
"@MMK_L_W" = {
"@MMK_R_A" = -82;
"@MMK_R_O" = -45;
"@MMK_R_n" = -50;
"@MMK_R_o" = -97;
"@MMK_R_period" = -100;
"@MMK_R_v" = -53;
AE = -24;
J = -8;
i = -28;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -92;
"@MMK_R_O" = -35;
"@MMK_R_n" = -77;
"@MMK_R_o" = -103;
"@MMK_R_period" = -107;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
AE = -81;
S = 0;
b = 0;
p = -100;
t = -42;
};
"@MMK_L_f" = {
"@MMK_R_n" = 0;
"@MMK_R_o" = -15;
"@MMK_R_v" = 0;
b = 0;
f = 0;
schwa = -5;
};
"@MMK_L_k" = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
b = 0;
schwa = -6;
};
"@MMK_L_n" = {
"@MMK_R_v" = -9;
z = 0;
};
"@MMK_L_o" = {
"@MMK_R_o" = 0;
"@MMK_R_v" = -11;
"@MMK_R_w" = -11;
"@MMK_R_x" = -4;
};
"@MMK_L_r" = {
"@MMK_R_n" = 0;
"@MMK_R_o" = -16;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
b = 0;
schwa = -3;
};
"@MMK_L_v" = {
"@MMK_R_n" = 0;
"@MMK_R_o" = -5;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
a = -6;
b = 0;
f = 0;
z = 0;
};
"@MMK_L_z" = {
"@MMK_R_A" = -16;
};
A = {
C = -28;
G = -23;
O = -28;
Q = -15;
T = -53;
V = -84;
a = 0;
b = 0;
f = -4;
s = 0;
u = 0;
v = -27;
w = -21;
z = 0;
};
B = {
"@MMK_R_A" = -7;
"@MMK_R_w" = -3;
a = 0;
b = 0;
f = 0;
};
C = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
"@MMK_R_w" = 0;
AE = -5;
a = 0;
b = 0;
s = 0;
u = 0;
w = 0;
};
D = {
V = -15;
a = 0;
b = 0;
u = 0;
w = 0;
};
E = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
"@MMK_R_x" = 0;
a = 0;
b = 0;
s = 0;
u = 0;
v = 0;
w = 0;
x = 0;
z = 0;
};
F = {
"@MMK_R_A" = -63;
J = -28;
a = -68;
b = 0;
f = -28;
s = -5;
};
G = {
"@MMK_R_W" = -22;
"@MMK_R_Y" = -21;
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_w" = 0;
Y = -29;
a = 0;
b = 0;
u = 0;
w = 0;
};
H = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
a = 0;
b = 0;
s = 0;
u = 0;
};
J = {
"@MMK_R_A" = -5;
};
K = {
"@MMK_R_O" = -13;
"@MMK_R_o" = -5;
"@MMK_R_v" = -18;
"@MMK_R_w" = -12;
a = -6;
b = 0;
};
L = {
"@MMK_R_O" = -6;
"@MMK_R_W" = -33;
T = -93;
Y = -35;
a = 0;
b = 0;
u = 0;
};
N = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
a = 0;
u = 0;
};
O = {
T = -36;
Y = -42;
a = 0;
b = 0;
s = 0;
u = 0;
v = 0;
w = 0;
};
Oslash = {
"@MMK_R_A" = -13;
};
Oslashacute = {
"@MMK_R_A" = -13;
};
P = {
"@MMK_R_A" = -64;
"@MMK_R_period" = -85;
Y = -21;
a = 0;
b = 0;
s = 0;
u = 0;
};
Q = {
"@MMK_R_V" = -21;
"@MMK_R_W" = -19;
};
R = {
"@MMK_R_O" = -7;
"@MMK_R_o" = -6;
T = -5;
Y = -18;
a = 0;
b = 0;
f = 0;
oslash = 0;
s = 0;
u = 0;
w = -7;
};
S = {
a = 0;
b = 0;
f = 0;
u = 0;
v = -6;
w = -6;
};
Schwa = {
"@MMK_R_A" = -13;
};
T = {
"@MMK_R_O" = -36;
"@MMK_R_period" = -101;
A = -53;
a = -114;
b = 0;
v = -27;
w = -87;
};
U = {
"@MMK_R_A" = -5;
a = 0;
b = 0;
s = 0;
v = 0;
w = 0;
};
V = {
A = -82;
a = -101;
b = 0;
u = -76;
v = 0;
};
X = {
"@MMK_R_O" = -35;
"@MMK_R_o" = -6;
"@MMK_R_v" = -5;
a = 0;
v = 0;
};
Y = {
"@MMK_R_A" = -84;
"@MMK_R_O" = -42;
O = -42;
S = -17;
a = -97;
b = 0;
s = -83;
u = -76;
v = -60;
};
Z = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
a = 0;
b = 0;
u = 0;
};
a = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
"@MMK_R_x" = 0;
a = 0;
b = 0;
f = 0;
period = 0;
s = 0;
u = 0;
v = 0;
w = 0;
x = 0;
z = 0;
};
ae = {
b = 0;
};
aring = {
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
a = 0;
b = 0;
f = 0;
s = 0;
v = 0;
};
b = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
"@MMK_R_x" = 0;
a = 0;
b = 0;
f = 0;
n = 0;
period = 0;
s = 0;
u = 0;
v = -13;
w = -13;
x = -13;
z = 0;
};
c = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
a = 0;
b = 0;
s = 0;
u = 0;
};
e = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
"@MMK_R_x" = 0;
a = 0;
b = 0;
f = 0;
period = 0;
s = 0;
u = 0;
v = -9;
w = -8;
x = -8;
};
f = {
a = -23;
b = 0;
f = 0;
u = 0;
v = 0;
};
g = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
"@MMK_R_w" = 0;
a = 0;
b = 0;
period = 0;
s = 0;
u = 0;
w = 0;
};
h = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
a = 0;
b = 0;
f = 0;
oslash = 0;
period = 0;
s = 0;
u = 0;
v = 0;
w = 0;
};
iacute = {
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
a = 0;
b = 0;
s = 0;
};
k = {
"@MMK_R_o" = -21;
a = -3;
b = 0;
period = 0;
s = 0;
u = 0;
v = 0;
w = 0;
};
m = {
"@MMK_R_v" = -4;
"@MMK_R_w" = -4;
};
n = {
z = 0;
};
nine = {
four = -43;
};
o = {
a = 0;
c = 0;
};
oe = {
"@MMK_R_x" = -5;
};
oslash = {
b = 0;
s = 0;
};
period = {
"@MMK_R_T" = -101;
"@MMK_R_V" = -115;
"@MMK_R_W" = -100;
"@MMK_R_Y" = -107;
four = -37;
};
r = {
a = -5;
b = 0;
period = -47;
s = 0;
u = 0;
v = 0;
w = 0;
};
s = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
a = 0;
b = 0;
f = 0;
oslash = 0;
period = 0;
s = 0;
u = 0;
v = 0;
w = 0;
z = 0;
};
seven = {
cedi = -5;
cent = -19;
copyright = -33;
currency = -45;
dong = -44;
four = -87;
guarani = -11;
lira = -19;
liraTurkish = -5;
manat = -3;
nine = -15;
section = -8;
six = -15;
sterling = -16;
};
t = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
a = 0;
b = 0;
f = 0;
s = 0;
u = 0;
v = 0;
w = 0;
z = 0;
};
three = {
three = -8;
two = -5;
};
threesuperior = {
four = -21;
};
two = {
four = -15;
};
v = {
a = -13;
b = 0;
f = 0;
period = 0;
s = 0;
u = 0;
v = 0;
z = 0;
};
w = {
a = -7;
b = 0;
period = 0;
s = 0;
u = 0;
v = 0;
};
x = {
"@MMK_R_n" = 0;
"@MMK_R_o" = -3;
"@MMK_R_v" = 0;
a = 0;
b = 0;
u = 0;
v = 0;
};
y = {
o = -6;
};
yen = {
cedi = -11;
cent = -19;
colonsign = -11;
copyright = -11;
currency = -13;
five = -8;
four = -19;
guarani = -11;
lira = -11;
nine = -8;
six = -11;
sterling = -13;
three = -5;
two = -8;
zero.zero = -16;
};
z = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
a = 0;
s = 0;
u = 0;
v = 0;
};
zero.zero = {
yen = -16;
};
};
"3DCE0E54-12D6-4F05-956C-7616B59038AD" = {
"@MMK_L_A" = {
"@MMK_R_O" = -42;
"@MMK_R_T" = -64;
"@MMK_R_U" = -17;
"@MMK_R_V" = -70;
"@MMK_R_W" = -94;
"@MMK_R_Y" = -96;
"@MMK_R_n" = 0;
"@MMK_R_o" = -11;
"@MMK_R_s" = 0;
"@MMK_R_v" = -30;
"@MMK_R_w" = 0;
Hbar = -42;
U = -17;
Y = -92;
b = 0;
f = 0;
w = 0;
z = 0;
};
"@MMK_L_B" = {
"@MMK_R_A" = 0;
"@MMK_R_V" = -28;
"@MMK_R_W" = -18;
"@MMK_R_X" = -14;
"@MMK_R_Y" = -28;
"@MMK_R_o" = 0;
"@MMK_R_w" = 0;
AE = -21;
Z = -14;
b = 0;
f = 0;
};
"@MMK_L_F" = {
"@MMK_R_A" = -30;
"@MMK_R_O" = -12;
"@MMK_R_n" = -18;
"@MMK_R_o" = -52;
"@MMK_R_period" = -37;
"@MMK_R_s" = 0;
"@MMK_R_v" = -28;
AE = -101;
J = -30;
b = 0;
f = 0;
i = -15;
j = -15;
u = -17;
};
"@MMK_L_K" = {
"@MMK_R_O" = -13;
"@MMK_R_o" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
b = 0;
};
"@MMK_L_L" = {
"@MMK_R_O" = -22;
"@MMK_R_T" = 0;
"@MMK_R_V" = -141;
"@MMK_R_W" = -36;
"@MMK_R_Y" = -36;
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
b = 0;
};
"@MMK_L_O" = {
"@MMK_R_A" = -42;
"@MMK_R_T" = -15;
"@MMK_R_V" = -46;
"@MMK_R_W" = -54;
"@MMK_R_X" = -11;
"@MMK_R_Y" = -12;
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
"@MMK_R_x" = -14;
A = -41;
AE = -55;
X = -35;
Y = -35;
Z = -21;
b = 0;
};
"@MMK_L_P" = {
"@MMK_R_A" = -33;
"@MMK_R_Y" = 0;
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
AE = -69;
Z = -28;
b = 0;
four = -16;
};
"@MMK_L_R" = {
"@MMK_R_O" = -13;
"@MMK_R_T" = -30;
"@MMK_R_V" = -28;
"@MMK_R_W" = -54;
"@MMK_R_Y" = -21;
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = -29;
"@MMK_R_w" = 0;
b = 0;
f = 0;
oslash = 0;
};
"@MMK_L_S" = {
"@MMK_R_T" = -4;
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
b = 0;
f = 0;
};
"@MMK_L_T" = {
"@MMK_R_A" = -64;
"@MMK_R_O" = -15;
"@MMK_R_n" = -60;
"@MMK_R_o" = -106;
"@MMK_R_period" = -30;
"@MMK_R_s" = -86;
"@MMK_R_v" = -100;
"@MMK_R_w" = 0;
AE = -42;
b = 0;
i = -18;
z = -77;
};
"@MMK_L_U" = {
"@MMK_R_A" = -17;
};
"@MMK_L_V" = {
"@MMK_R_A" = -69;
"@MMK_R_O" = -47;
"@MMK_R_n" = -78;
"@MMK_R_o" = -115;
"@MMK_R_period" = -106;
"@MMK_R_s" = -77;
"@MMK_R_v" = -81;
AE = -90;
J = -14;
b = 0;
i = -12;
t = -8;
};
"@MMK_L_W" = {
"@MMK_R_A" = -92;
"@MMK_R_O" = -54;
"@MMK_R_n" = -50;
"@MMK_R_o" = -93;
"@MMK_R_period" = -100;
"@MMK_R_v" = -57;
AE = -62;
J = -21;
i = -12;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -102;
"@MMK_R_O" = -15;
"@MMK_R_n" = -73;
"@MMK_R_o" = -107;
"@MMK_R_period" = -103;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
AE = -98;
S = 0;
b = 0;
p = -100;
t = -18;
};
"@MMK_L_f" = {
"@MMK_R_n" = 0;
"@MMK_R_o" = -24;
"@MMK_R_v" = 0;
b = 0;
f = 0;
schwa = -14;
};
"@MMK_L_k" = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
b = 0;
schwa = -8;
};
"@MMK_L_n" = {
"@MMK_R_v" = -15;
z = 0;
};
"@MMK_L_o" = {
"@MMK_R_o" = 0;
"@MMK_R_v" = -13;
"@MMK_R_w" = -13;
"@MMK_R_x" = -10;
};
"@MMK_L_r" = {
"@MMK_R_n" = 0;
"@MMK_R_o" = -18;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
b = 0;
schwa = -7;
};
"@MMK_L_v" = {
"@MMK_R_n" = 0;
"@MMK_R_o" = -11;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
a = -14;
b = 0;
f = 0;
z = 0;
};
"@MMK_L_z" = {
"@MMK_R_A" = -42;
};
A = {
C = -41;
G = -27;
O = -41;
Q = -35;
T = -57;
V = -99;
a = 0;
b = 0;
f = -10;
s = 0;
u = 0;
v = -37;
w = -23;
z = 0;
};
B = {
"@MMK_R_A" = -17;
"@MMK_R_w" = -7;
a = 0;
b = 0;
f = 0;
};
C = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
"@MMK_R_w" = 0;
AE = -14;
a = 0;
b = 0;
s = 0;
u = 0;
w = 0;
};
D = {
V = -35;
a = 0;
b = 0;
u = 0;
w = 0;
};
E = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
"@MMK_R_x" = 0;
a = 0;
b = 0;
s = 0;
u = 0;
v = 0;
w = 0;
x = 0;
z = 0;
};
F = {
"@MMK_R_A" = -67;
J = -41;
a = -52;
b = 0;
f = -12;
s = -14;
};
G = {
"@MMK_R_W" = -32;
"@MMK_R_Y" = -9;
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_w" = 0;
Y = -27;
a = 0;
b = 0;
u = 0;
w = 0;
};
H = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
a = 0;
b = 0;
s = 0;
u = 0;
};
J = {
"@MMK_R_A" = -14;
};
K = {
"@MMK_R_O" = -32;
"@MMK_R_o" = -11;
"@MMK_R_v" = -42;
"@MMK_R_w" = -28;
a = -14;
b = 0;
};
L = {
"@MMK_R_O" = -14;
"@MMK_R_W" = -78;
T = -83;
Y = -84;
a = 0;
b = 0;
u = 0;
};
N = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
a = 0;
u = 0;
};
O = {
T = -30;
Y = -61;
a = 0;
b = 0;
s = 0;
u = 0;
v = 0;
w = 0;
};
Oslash = {
"@MMK_R_A" = -34;
};
Oslashacute = {
"@MMK_R_A" = -34;
};
P = {
"@MMK_R_A" = -70;
"@MMK_R_period" = -94;
Y = -23;
a = 0;
b = 0;
s = 0;
u = 0;
};
Q = {
"@MMK_R_V" = -55;
"@MMK_R_W" = -49;
};
R = {
"@MMK_R_O" = -17;
"@MMK_R_o" = -14;
T = -11;
Y = -42;
a = 0;
b = 0;
f = 0;
oslash = 0;
s = 0;
u = 0;
w = -17;
};
S = {
a = 0;
b = 0;
f = 0;
u = 0;
v = -14;
w = -14;
};
Schwa = {
"@MMK_R_A" = -34;
};
T = {
"@MMK_R_O" = -30;
"@MMK_R_period" = -71;
A = -57;
a = -106;
b = 0;
v = -64;
w = -83;
};
U = {
"@MMK_R_A" = -14;
a = 0;
b = 0;
s = 0;
v = 0;
w = 0;
};
V = {
A = -92;
a = -115;
b = 0;
u = -84;
v = 0;
};
X = {
"@MMK_R_O" = -35;
"@MMK_R_o" = -14;
"@MMK_R_v" = -11;
a = 0;
v = 0;
};
Y = {
"@MMK_R_A" = -99;
"@MMK_R_O" = -61;
O = -61;
S = -27;
a = -93;
b = 0;
s = -87;
u = -78;
v = -60;
};
Z = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
a = 0;
b = 0;
u = 0;
};
a = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
"@MMK_R_x" = 0;
a = 0;
b = 0;
f = 0;
period = 0;
s = 0;
u = 0;
v = 0;
w = 0;
x = 0;
z = 0;
};
ae = {
b = 0;
};
aring = {
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
a = 0;
b = 0;
f = 0;
s = 0;
v = 0;
};
b = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
"@MMK_R_x" = 0;
a = 0;
b = 0;
f = 0;
n = 0;
period = 0;
s = 0;
u = 0;
v = -17;
w = -17;
x = -17;
z = 0;
};
c = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
a = 0;
b = 0;
s = 0;
u = 0;
};
e = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
"@MMK_R_x" = 0;
a = 0;
b = 0;
f = 0;
period = 0;
s = 0;
u = 0;
v = -15;
w = -12;
x = -12;
};
f = {
a = -27;
b = 0;
f = 0;
u = 0;
v = 0;
};
g = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
"@MMK_R_w" = 0;
a = 0;
b = 0;
period = 0;
s = 0;
u = 0;
w = 0;
};
h = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
a = 0;
b = 0;
f = 0;
oslash = 0;
period = 0;
s = 0;
u = 0;
v = 0;
w = 0;
};
iacute = {
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
a = 0;
b = 0;
s = 0;
};
k = {
"@MMK_R_o" = -15;
a = -7;
b = 0;
period = 0;
s = 0;
u = 0;
v = 0;
w = 0;
};
m = {
"@MMK_R_v" = -2;
"@MMK_R_w" = -2;
};
n = {
z = 0;
};
nine = {
four = -47;
};
o = {
a = 0;
c = 0;
};
oe = {
"@MMK_R_x" = -14;
};
oslash = {
b = 0;
s = 0;
};
period = {
"@MMK_R_T" = -71;
"@MMK_R_V" = -106;
"@MMK_R_W" = -100;
"@MMK_R_Y" = -103;
four = -16;
};
r = {
a = -11;
b = 0;
period = -43;
s = 0;
u = 0;
v = 0;
w = 0;
};
s = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
a = 0;
b = 0;
f = 0;
oslash = 0;
period = 0;
s = 0;
u = 0;
v = 0;
w = 0;
z = 0;
};
seven = {
cedi = -14;
cent = -49;
copyright = -37;
currency = -36;
dong = -18;
four = -83;
guarani = -28;
lira = -49;
liraTurkish = -14;
manat = -7;
nine = -6;
section = -21;
six = -6;
sterling = -42;
};
t = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
a = 0;
b = 0;
f = 0;
s = 0;
u = 0;
v = 0;
w = 0;
z = 0;
};
three = {
three = -21;
two = -14;
};
threesuperior = {
four = -55;
};
two = {
four = -6;
};
v = {
a = -17;
b = 0;
f = 0;
period = 0;
s = 0;
u = 0;
v = 0;
z = 0;
};
w = {
a = -15;
b = 0;
period = 0;
s = 0;
u = 0;
v = 0;
};
x = {
"@MMK_R_n" = 0;
"@MMK_R_o" = -7;
"@MMK_R_v" = 0;
a = 0;
b = 0;
u = 0;
v = 0;
};
y = {
o = -14;
};
yen = {
cedi = -28;
cent = -49;
colonsign = -28;
copyright = -28;
currency = -34;
five = -21;
four = -49;
guarani = -28;
lira = -28;
nine = -21;
six = -28;
sterling = -34;
three = -14;
two = -21;
zero.zero = -42;
};
z = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
a = 0;
s = 0;
u = 0;
v = 0;
};
zero.zero = {
yen = -42;
};
};
UUID1 = {
"@MMK_L_A" = {
"@MMK_R_O" = -50;
"@MMK_R_T" = -60;
"@MMK_R_U" = -20;
"@MMK_R_V" = -100;
"@MMK_R_W" = -110;
"@MMK_R_Y" = -100;
"@MMK_R_n" = 0;
"@MMK_R_o" = -15;
"@MMK_R_s" = 0;
"@MMK_R_v" = -30;
"@MMK_R_w" = 0;
Hbar = -60;
U = -25;
Y = -100;
b = 0;
f = 0;
w = 0;
z = 0;
};
"@MMK_L_B" = {
"@MMK_R_A" = 0;
"@MMK_R_V" = -40;
"@MMK_R_W" = -20;
"@MMK_R_X" = -20;
"@MMK_R_Y" = -40;
"@MMK_R_o" = 0;
"@MMK_R_w" = 0;
AE = -30;
Z = -20;
b = 0;
f = 0;
};
"@MMK_L_F" = {
"@MMK_R_A" = 0;
"@MMK_R_n" = 0;
"@MMK_R_o" = -40;
"@MMK_R_s" = 0;
"@MMK_R_v" = -20;
AE = -110;
J = 0;
b = 0;
f = 0;
u = -25;
};
"@MMK_L_K" = {
"@MMK_R_O" = 0;
"@MMK_R_o" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
b = 0;
};
"@MMK_L_L" = {
"@MMK_R_O" = 0;
"@MMK_R_T" = 0;
"@MMK_R_V" = -150;
"@MMK_R_W" = 0;
"@MMK_R_Y" = 0;
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
b = 0;
};
"@MMK_L_O" = {
"@MMK_R_A" = -50;
"@MMK_R_T" = 0;
"@MMK_R_V" = -50;
"@MMK_R_W" = -60;
"@MMK_R_X" = 0;
"@MMK_R_Y" = 0;
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
"@MMK_R_x" = -20;
A = -50;
AE = -80;
X = -35;
Y = -50;
Z = -30;
b = 0;
};
"@MMK_L_P" = {
"@MMK_R_A" = -15;
"@MMK_R_Y" = 0;
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
AE = -100;
Z = -40;
b = 0;
};
"@MMK_L_R" = {
"@MMK_R_O" = 0;
"@MMK_R_T" = 0;
"@MMK_R_V" = -40;
"@MMK_R_W" = -40;
"@MMK_R_Y" = 0;
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = -20;
"@MMK_R_w" = 0;
b = 0;
f = 0;
oslash = 0;
};
"@MMK_L_S" = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
b = 0;
f = 0;
};
"@MMK_L_T" = {
"@MMK_R_A" = -60;
"@MMK_R_O" = 0;
"@MMK_R_n" = -60;
"@MMK_R_o" = -100;
"@MMK_R_period" = 0;
"@MMK_R_s" = -80;
"@MMK_R_v" = -100;
"@MMK_R_w" = 0;
AE = -60;
b = 0;
z = -80;
};
"@MMK_L_U" = {
"@MMK_R_A" = -20;
};
"@MMK_L_V" = {
"@MMK_R_A" = -100;
"@MMK_R_O" = -50;
"@MMK_R_n" = -90;
"@MMK_R_o" = -125;
"@MMK_R_period" = -100;
"@MMK_R_s" = -85;
"@MMK_R_v" = -90;
AE = -130;
J = -20;
b = 0;
};
"@MMK_L_W" = {
"@MMK_R_A" = -100;
"@MMK_R_O" = -60;
"@MMK_R_n" = -50;
"@MMK_R_o" = -90;
"@MMK_R_period" = -100;
"@MMK_R_v" = -60;
AE = -90;
J = -30;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -110;
"@MMK_R_O" = 0;
"@MMK_R_n" = -70;
"@MMK_R_o" = -110;
"@MMK_R_period" = -100;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
AE = -110;
S = 0;
b = 0;
p = -100;
};
"@MMK_L_f" = {
"@MMK_R_n" = 0;
"@MMK_R_o" = -30;
"@MMK_R_v" = 0;
b = 0;
f = 0;
schwa = -20;
};
"@MMK_L_k" = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
b = 0;
schwa = -10;
};
"@MMK_L_n" = {
"@MMK_R_v" = -20;
z = 0;
};
"@MMK_L_o" = {
"@MMK_R_o" = 0;
"@MMK_R_v" = -15;
"@MMK_R_w" = -15;
"@MMK_R_x" = -15;
};
"@MMK_L_r" = {
"@MMK_R_n" = 0;
"@MMK_R_o" = -20;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
b = 0;
schwa = -10;
};
"@MMK_L_v" = {
"@MMK_R_n" = 0;
"@MMK_R_o" = -15;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
a = -20;
b = 0;
f = 0;
z = 0;
};
"@MMK_L_z" = {
"@MMK_R_A" = -60;
};
A = {
C = -50;
G = -30;
O = -50;
Q = -50;
T = -60;
V = -110;
a = 0;
b = 0;
f = -15;
s = 0;
u = 0;
v = -45;
w = -25;
z = 0;
};
B = {
"@MMK_R_A" = -25;
"@MMK_R_w" = -10;
a = 0;
b = 0;
f = 0;
};
C = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
"@MMK_R_w" = 0;
AE = -20;
a = 0;
b = 0;
s = 0;
u = 0;
w = 0;
};
D = {
V = -50;
a = 0;
b = 0;
u = 0;
w = 0;
};
E = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
"@MMK_R_x" = 0;
a = 0;
b = 0;
s = 0;
u = 0;
v = 0;
w = 0;
x = 0;
z = 0;
};
F = {
"@MMK_R_A" = -70;
J = -50;
a = -40;
b = 0;
f = 0;
s = -20;
};
G = {
"@MMK_R_W" = -40;
"@MMK_R_Y" = 0;
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_w" = 0;
Y = -25;
a = 0;
b = 0;
u = 0;
w = 0;
};
H = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
a = 0;
b = 0;
s = 0;
u = 0;
};
J = {
"@MMK_R_A" = -20;
};
K = {
"@MMK_R_O" = -45;
"@MMK_R_o" = -15;
"@MMK_R_v" = -60;
"@MMK_R_w" = -40;
a = -20;
b = 0;
};
L = {
"@MMK_R_O" = -20;
"@MMK_R_W" = -110;
T = -75;
Y = -120;
a = 0;
b = 0;
u = 0;
};
N = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
a = 0;
u = 0;
};
O = {
T = -25;
Y = -75;
a = 0;
b = 0;
s = 0;
u = 0;
v = 0;
w = 0;
};
Oslash = {
"@MMK_R_A" = -50;
};
Oslashacute = {
"@MMK_R_A" = -50;
};
P = {
"@MMK_R_A" = -75;
"@MMK_R_period" = -100;
Y = -25;
a = 0;
b = 0;
s = 0;
u = 0;
};
Q = {
"@MMK_R_V" = -80;
"@MMK_R_W" = -70;
};
R = {
"@MMK_R_O" = -25;
"@MMK_R_o" = -20;
T = -15;
Y = -60;
a = 0;
b = 0;
f = 0;
oslash = 0;
s = 0;
u = 0;
w = -25;
};
S = {
a = 0;
b = 0;
f = 0;
u = 0;
v = -20;
w = -20;
};
Schwa = {
"@MMK_R_A" = -50;
};
T = {
"@MMK_R_O" = -25;
"@MMK_R_period" = -50;
A = -60;
a = -100;
b = 0;
v = -90;
w = -80;
};
U = {
"@MMK_R_A" = -20;
a = 0;
b = 0;
s = 0;
v = 0;
w = 0;
};
V = {
A = -100;
a = -125;
b = 0;
u = -90;
v = 0;
};
X = {
"@MMK_R_O" = -35;
"@MMK_R_o" = -20;
"@MMK_R_v" = -15;
a = 0;
v = 0;
};
Y = {
"@MMK_R_A" = -110;
"@MMK_R_O" = -75;
O = -75;
S = -35;
a = -90;
b = 0;
s = -90;
u = -80;
v = -60;
};
Z = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
a = 0;
b = 0;
u = 0;
};
a = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
"@MMK_R_x" = 0;
a = 0;
b = 0;
f = 0;
period = 0;
s = 0;
u = 0;
v = 0;
w = 0;
x = 0;
z = 0;
};
ae = {
b = 0;
};
aring = {
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
a = 0;
b = 0;
f = 0;
s = 0;
v = 0;
};
b = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
"@MMK_R_x" = 0;
a = 0;
b = 0;
f = 0;
n = 0;
period = 0;
s = 0;
u = 0;
v = -20;
w = -20;
x = -20;
z = 0;
};
c = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
a = 0;
b = 0;
s = 0;
u = 0;
};
e = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
"@MMK_R_x" = 0;
a = 0;
b = 0;
f = 0;
period = 0;
s = 0;
u = 0;
v = -20;
w = -15;
x = -15;
};
f = {
a = -30;
b = 0;
f = 0;
u = 0;
v = 0;
};
g = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
"@MMK_R_w" = 0;
a = 0;
b = 0;
period = 0;
s = 0;
u = 0;
w = 0;
};
h = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
a = 0;
b = 0;
f = 0;
oslash = 0;
period = 0;
s = 0;
u = 0;
v = 0;
w = 0;
};
iacute = {
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
a = 0;
b = 0;
s = 0;
};
k = {
"@MMK_R_o" = -10;
a = -10;
b = 0;
period = 0;
s = 0;
u = 0;
v = 0;
w = 0;
};
n = {
z = 0;
};
nine = {
four = -50;
};
o = {
a = 0;
c = 0;
};
oe = {
"@MMK_R_x" = -20;
};
oslash = {
b = 0;
s = 0;
};
period = {
"@MMK_R_T" = -50;
"@MMK_R_V" = -100;
"@MMK_R_W" = -100;
"@MMK_R_Y" = -100;
};
r = {
a = -15;
b = 0;
period = -40;
s = 0;
u = 0;
v = 0;
w = 0;
};
s = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_period" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
a = 0;
b = 0;
f = 0;
oslash = 0;
period = 0;
s = 0;
u = 0;
v = 0;
w = 0;
z = 0;
};
seven = {
cedi = -20;
cent = -70;
copyright = -40;
currency = -30;
four = -80;
guarani = -40;
lira = -70;
liraTurkish = -20;
manat = -10;
section = -30;
sterling = -60;
};
t = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
"@MMK_R_w" = 0;
a = 0;
b = 0;
f = 0;
s = 0;
u = 0;
v = 0;
w = 0;
z = 0;
};
three = {
three = -30;
two = -20;
};
threesuperior = {
four = -80;
};
v = {
a = -20;
b = 0;
f = 0;
period = 0;
s = 0;
u = 0;
v = 0;
z = 0;
};
w = {
b = 0;
period = 0;
s = 0;
u = 0;
v = 0;
};
x = {
"@MMK_R_n" = 0;
"@MMK_R_o" = -10;
"@MMK_R_v" = 0;
a = 0;
b = 0;
u = 0;
v = 0;
};
y = {
o = -20;
};
yen = {
cedi = -40;
cent = -70;
colonsign = -40;
copyright = -40;
currency = -50;
five = -30;
four = -70;
guarani = -40;
lira = -40;
nine = -30;
six = -40;
sterling = -50;
three = -20;
two = -30;
zero.zero = -60;
};
z = {
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_s" = 0;
"@MMK_R_v" = 0;
a = 0;
s = 0;
u = 0;
v = 0;
};
zero.zero = {
yen = -60;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
},
{
name = "zone 1";
},
{
name = "zone 2";
},
{
name = "zone 3";
}
);
properties = (
{
key = copyrights;
values = (
{
language = dflt;
value = "Copyright 2010 The Josefin Sans Project Authors (https://github.com/ThomasJockin/JosefinSansFont-master), with Reserved Font Name \"Josefin Sans\".";
}
);
},
{
key = designers;
values = (
{
language = dflt;
value = "Santiago Orozco";
}
);
},
{
key = designerURL;
value = "http://www.typemade.mx";
},
{
key = licenses;
values = (
{
language = dflt;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: http://scripts.sil.org/OFL";
}
);
},
{
key = licenseURL;
value = "http://scripts.sil.org/OFL";
},
{
key = manufacturers;
values = (
{
language = dflt;
value = Typemade;
}
);
},
{
key = manufacturerURL;
value = "http://www.typemade.mx";
},
{
key = trademarks;
values = (
{
language = dflt;
value = "Josefin Sans is a trademark of Typemade.";
}
);
}
);
settings = {
disablesAutomaticAlignment = 1;
};
stems = (
{
horizontal = 1;
name = hStem0;
},
{
horizontal = 1;
name = hStem1;
},
{
horizontal = 1;
name = hStem2;
},
{
name = vStem0;
},
{
name = vStem1;
},
{
name = vStem2;
}
);
unitsPerEm = 1000;
userData = {
GSDimensionPlugin.Dimensions = {
UUID0 = {
HH = "13";
HV = "14";
OH = "13";
OV = "14";
};
UUID1 = {
HH = "140";
HV = "145";
OH = "140";
OV = "150";
nV = "140";
nd = "109";
oH = "114";
oV = "141";
};
};
com.schriftgestaltung.Glyphs.groupsNotInFeature = (
);
com.schriftgestaltung.Glyphs.originalKerningGroups = {
public.kern1.A = (
A,
Aacute,
Abreve,
Abreveacute,
Abrevedotbelow,
Abrevegrave,
Abrevehookabove,
Abrevetilde,
Acircumflex,
Acircumflexacute,
Acircumflexdotbelow,
Acircumflexgrave,
Acircumflexhookabove,
Acircumflextilde,
Adblgrave,
Adieresis,
Adotbelow,
Agrave,
Ahookabove,
Ainvertedbreve,
Amacron,
Aogonek,
Aring,
Aringacute,
Atilde
);
public.kern1.B = (
B
);
public.kern1.F = (
F
);
public.kern1.K = (
K
);
public.kern1.L = (
L
);
public.kern1.O = (
D,
Eth,
Dcaron,
Dcroat,
O,
Oacute,
Obreve,
Ocircumflex,
Ocircumflexacute,
Ocircumflexdotbelow,
Ocircumflexgrave,
Ocircumflexhookabove,
Ocircumflextilde,
Odblgrave,
Odieresis,
Odieresismacron,
Odotaccentmacron,
Odotbelow,
Ograve,
Ohookabove,
Ohorn,
Ohornacute,
Ohorndotbelow,
Ohorngrave,
Ohornhookabove,
Ohorntilde,
Ohungarumlaut,
Oinvertedbreve,
Omacron,
Oogonek,
Otilde,
Otildemacron
);
public.kern1.P = (
P,
Thorn
);
public.kern1.R = (
R,
Racute,
Rcaron,
Rcommaaccent,
Rdblgrave,
Rinvertedbreve
);
public.kern1.S = (
S,
Sacute,
Scaron,
Scedilla,
Scircumflex,
Scommaaccent
);
public.kern1.T = (
T,
Tbar,
Tcaron,
Tcedilla,
Tcommaaccent
);
public.kern1.U = (
U,
Uacute,
Ubreve,
Ucircumflex,
Udblgrave,
Udieresis,
Udotbelow,
Ugrave,
Uhookabove,
Uhorn,
Uhornacute,
Uhorndotbelow,
Uhorngrave,
Uhornhookabove,
Uhorntilde,
Uhungarumlaut,
Uinvertedbreve,
Umacron,
Uogonek,
Uring,
Utilde
);
public.kern1.V = (
V
);
public.kern1.W = (
W,
Wacute,
Wcircumflex,
Wdieresis,
Wgrave
);
public.kern1.Y = (
Y,
Yacute,
Ycircumflex,
Ydieresis,
Ydotbelow,
Ygrave,
Yhookabove,
Ymacron,
Ytilde
);
public.kern1.f = (
f
);
public.kern1.k = (
k,
kcommaaccent
);
public.kern1.n = (
n,
nacute,
ncaron,
ncommaaccent,
ntilde
);
public.kern1.o = (
schwa,
o,
oacute,
obreve,
ocircumflex,
ocircumflexacute,
ocircumflexdotbelow,
ocircumflexgrave,
ocircumflexhookabove,
ocircumflextilde,
odblgrave,
odieresis,
odieresismacron,
odotaccentmacron,
odotbelow,
ograve,
ohookabove,
ohorn,
ohornacute,
ohorndotbelow,
ohorngrave,
ohorntilde,
ohungarumlaut,
oinvertedbreve,
omacron,
oogonek,
oslash,
otilde,
otildemacron,
p,
thorn
);
public.kern1.r = (
r
);
public.kern1.v = (
v,
w,
wacute,
wcircumflex,
wdieresis,
wgrave,
y,
yacute,
ycircumflex,
ydieresis,
ydotbelow,
ygrave,
yhookabove,
ymacron,
ytilde
);
public.kern1.z = (
Hbar
);
public.kern2.A = (
A,
Aacute,
Abreve,
Abreveacute,
Abrevedotbelow,
Abrevegrave,
Abrevehookabove,
Abrevetilde,
Acircumflex,
Acircumflexacute,
Acircumflexdotbelow,
Acircumflexgrave,
Acircumflexhookabove,
Acircumflextilde,
Adblgrave,
Adieresis,
Adotbelow,
Agrave,
Ahookabove,
Ainvertedbreve,
Amacron,
Aogonek,
Aring,
Aringacute,
Atilde
);
public.kern2.O = (
C,
Cacute,
Ccaron,
Ccedilla,
Ccircumflex,
Cdotaccent,
G,
Gbreve,
Gcaron,
Gcircumflex,
Gcommaaccent,
Gdotaccent,
O,
Oacute,
Obreve,
Ocircumflex,
Ocircumflexacute,
Ocircumflexdotbelow,
Ocircumflexgrave,
Ocircumflexhookabove,
Ocircumflextilde,
Odblgrave,
Odieresis,
Odieresismacron,
Odotaccentmacron,
Odotbelow,
Ograve,
Ohookabove,
Ohorn,
Ohornacute,
Ohorndotbelow,
Ohorngrave,
Ohornhookabove,
Ohorntilde,
Ohungarumlaut,
Oinvertedbreve,
Omacron,
Oogonek,
Otilde,
Otildemacron,
OE,
Q
);
public.kern2.T = (
T,
Tbar,
Tcaron,
Tcedilla,
Tcommaaccent
);
public.kern2.U = (
U,
Uacute,
Ubreve,
Ucircumflex,
Udblgrave,
Udieresis,
Udotbelow,
Ugrave,
Uhookabove,
Uhorn,
Uhornacute,
Uhorndotbelow,
Uhorngrave,
Uhornhookabove,
Uhorntilde,
Uhungarumlaut,
Uinvertedbreve,
Umacron,
Uogonek,
Uring,
Utilde
);
public.kern2.V = (
V
);
public.kern2.W = (
W,
Wacute,
Wcircumflex,
Wdieresis,
Wgrave
);
public.kern2.X = (
X
);
public.kern2.Y = (
Y,
Yacute,
Ycircumflex,
Ydieresis,
Ydotbelow,
Ygrave,
Yhookabove,
Ymacron,
Ytilde
);
public.kern2.n = (
m,
n,
nacute,
ncaron,
ncommaaccent,
ntilde,
r,
u
);
public.kern2.o = (
a,
aacute,
abreve,
abreveacute,
abrevedotbelow,
abrevegrave,
abrevehookabove,
abrevetilde,
acircumflex,
acircumflexacute,
acircumflexdotbelow,
acircumflexgrave,
acircumflexhookabove,
acircumflextilde,
adblgrave,
adieresis,
adotbelow,
agrave,
ahookabove,
ainvertedbreve,
amacron,
aogonek,
aring,
aringacute,
atilde,
c,
cacute,
ccaron,
ccedilla,
ccircumflex,
cdotaccent,
d,
dcaron,
dcroat,
dzcaron,
e,
eacute,
ebreve,
ecaron,
ecircumflex,
ecircumflexacute,
ecircumflexdotbelow,
ecircumflexgrave,
ecircumflexhookabove,
ecircumflextilde,
edblgrave,
edieresis,
edotaccent,
edotbelow,
egrave,
ehookabove,
einvertedbreve,
emacron,
eogonek,
etilde,
g,
gbreve,
gcaron,
gcircumflex,
gcommaaccent,
gdotaccent,
o,
oacute,
obreve,
ocircumflex,
ocircumflexacute,
ocircumflexdotbelow,
ocircumflexgrave,
ocircumflexhookabove,
ocircumflextilde,
odblgrave,
odieresis,
odieresismacron,
odotaccentmacron,
odotbelow,
ograve,
ohookabove,
ohorn,
ohornacute,
ohorndotbelow,
ohorngrave,
ohorntilde,
ohungarumlaut,
oinvertedbreve,
omacron,
oogonek,
otilde,
otildemacron,
oe,
q
);
public.kern2.period = (
comma,
ellipsis,
period
);
public.kern2.s = (
s
);
public.kern2.v = (
v,
y,
yacute,
ycircumflex,
ydieresis,
ydotbelow,
ygrave,
yhookabove,
ymacron,
ytilde
);
public.kern2.w = (
w,
wacute,
wcircumflex,
wdieresis,
wgrave
);
public.kern2.x = (
x
);
};
};
versionMajor = 2;
versionMinor = 0;
}
